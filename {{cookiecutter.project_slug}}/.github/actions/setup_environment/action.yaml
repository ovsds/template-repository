name: "Setup Environment"
description: "Setting environment for the project"

inputs:
  task-version:
    description: "Task version"
    required: true
    default: "3.33.1"
  task-enabled:
    description: "Task enabled"
    required: true
    default: "true"
{%- if cookiecutter.with_python == 'true' %}
  python-version:
    description: "Python version"
    required: true
    default: "3.12.1"
  python-enabled:
    description: "Python enabled"
    required: true
    default: "false"
  poetry-version:
    description: "Poetry version"
    required: true
    default: "1.7.1"
  poetry-enabled:
    description: "Poetry enabled"
    required: true
    default: "false"
{%- endif %}
{%- if cookiecutter.with_cookiecutter == 'true' %}
  cookiecutter-version:
    description: "Cookiecutter version"
    required: true
    default: "2.4.0"
  cookiecutter-enabled:
    description: "Cookiecutter enabled"
    required: true
    default: "false"
{%- endif %}
{%- if cookiecutter.with_trivy == 'true' %}
  trivy-version:
    description: "Trivy version"
    required: true
    default: "v0.57.1"
  trivy-enabled:
    description: "Trivy enabled"
    required: true
    default: "false"
{%- endif %}
{%- if cookiecutter.with_zizmor == 'true' %}
  zizmor-version:
    description: "Zizmor version"
    required: true
    default: "1.0.1"
  zizmor-enabled:
    description: "Zizmor enabled"
    required: true
    default: "false"
{%- endif %}

runs:
  using: "composite"
  steps:
    - name: Setup Task
      if: ${{ "{{" }} inputs.task-enabled == 'true' }}
      uses: arduino/setup-task@v2.0.0
      with:
        version: ${{ "{{" }} inputs.task-version }}
{%- if cookiecutter.with_python == 'true' %}

    - name: Setup Python
      if: ${{ "{{" }} inputs.python-enabled == 'true' }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ "{{" }} inputs.python-version }}

    - name: Setup Poetry
      if: ${{ "{{" }} inputs.poetry-enabled == 'true' }}
      uses: snok/install-poetry@v1
      with:
        version: ${{ "{{" }} inputs.poetry-version }}
{%- endif %}
{%- if cookiecutter.with_cookiecutter == 'true' %}

    - name: Setup Cookiecutter
      if: ${{ "{{" }} inputs.cookiecutter-enabled == 'true' }}
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install "cookiecutter==${COOKIECUTTER_VERSION}"
      env:
        COOKIECUTTER_VERSION: ${{ "{{" }} inputs.cookiecutter-version }}
{%- endif %}
{%- if cookiecutter.with_trivy == 'true' %}

    - name: Setup Trivy
      if: ${{ "{{" }} inputs.trivy-enabled == 'true' }}
      uses: aquasecurity/setup-trivy@v0.2.2
      with:
        version: ${{ "{{" }} inputs.trivy-version }}
{%- endif %}
{%- if cookiecutter.with_zizmor == 'true' %}

    - name: Setup Zizmor
      if: ${{ "{{" }} inputs.zizmor-enabled == 'true' }}
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install "zizmor==${ZIZMOR_VERSION}"
      env:
        ZIZMOR_VERSION: ${{ "{{" }} inputs.zizmor-version }}
{%- endif %}
