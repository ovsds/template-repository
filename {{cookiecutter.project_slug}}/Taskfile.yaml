version: 3

silent: true
{%- if cookiecutter.scripts == 'true' or cookiecutter.services != '' or cookiecutter.with_docker == 'true' %}

includes:
{%- if cookiecutter.scripts == 'true' %}
  scripts:
    taskfile: ./.scripts
    dir: ./.scripts
{%- endif %}
{%- if cookiecutter.services != '' %}
  {%- for service in cookiecutter.services.split(' ') %}
  {{service}}:
    taskfile: ./{{service}}
    dir: ./{{service}}
  {%- endfor %}
{%- endif %}
{%- if cookiecutter.with_docker == 'true' %}
  docker:
    taskfile: ./docker
    dir: ./docker
{%- endif %}
{%- endif %}

vars:
  NENV: "node_modules"
{%- if cookiecutter.services != '' %}
  SERVICES: "{{cookiecutter.services}}"
{%- endif %}
{%- if cookiecutter.with_cookiecutter == 'true' %}
  TEST_RESULTS: ".test_results"
{%- endif %}

tasks:
  _prettier:
    internal: true
    cmds:
      - "{{ "{{" }}.NENV}}/.bin/prettier {{ "{{" }}.COMMAND}}"

  _with_nvm:
    internal: true
    cmds:
      - "source ${HOME}/.nvm/nvm.sh && nvm install && {{ "{{" }}.COMMAND}}"

  init:
    desc: Initialize project environment
    cmds:
      - echo 'Installing node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm install" }

      - echo 'Installing husky pre-commit...'
      - task: _with_nvm
        vars: { COMMAND: "npm run prepare" }
{%- if cookiecutter.scripts == 'true' %}

      - echo 'Installing .scripts dependencies...'
      - task: scripts:init
{%- endif %}
{%- if cookiecutter.services != '' %}

      - for: { var: SERVICES, as: SERVICE }
        task: "{{ "{{" }}.SERVICE}}:init"
{%- endif %}

  lint:
    desc: Lint project
    cmds:
      - echo 'Running prettier checks...'
      - task: _prettier
        vars: { COMMAND: "--check ." }
{%- if cookiecutter.scripts == 'true' %}

      - echo 'Running scripts checks...'
      - task: scripts:lint
{%- endif %}
{%- if cookiecutter.services != '' %}

      - for: { var: SERVICES, as: SERVICE }
        task: "{{ "{{" }}.SERVICE}}:lint"
{%- endif %}
{%- if cookiecutter.with_zizmor == 'true' %}

      - echo 'Running GHA checks...'
      - GH_TOKEN="$(gh auth token)" zizmor .
{%- endif %}

  lint-fix:
    desc: Lint fix project
    cmds:
      - echo 'Running prettier fixes...'
      - task: _prettier
        vars: { COMMAND: "--write ." }
{%- if cookiecutter.scripts == 'true' %}

      - echo 'Running scripts fixes...'
      - task: scripts:lint-fix
{%- endif %}
{%- if cookiecutter.services != '' %}

      - for: { var: SERVICES, as: SERVICE }
        task: "{{ "{{" }}.SERVICE}}:lint-fix"
{%- endif %}
{%- if cookiecutter.with_zizmor == 'true' %}

      - echo 'Running GHA checks...'
      - GH_TOKEN="$(gh auth token)" zizmor .
{%- endif %}

  test:
    desc: Test project
    cmds:
      - echo 'Running tests...'
{%- if cookiecutter.with_cookiecutter == 'true' %}
      - python -m tests
{%- endif %}
{%- if cookiecutter.services != '' %}

      - for: { var: SERVICES, as: SERVICE }
        task: "{{ "{{" }}.SERVICE}}:test"
{%- endif %}

  clean:
    desc: Clean project environment
    cmds:
      - echo 'Cleaning node dependencies...'
      - rm -rf {{ "{{" }}.NENV}}
{%- if cookiecutter.scripts == 'true' %}

      - echo 'Cleaning .scripts dependencies...'
      - task: scripts:clean
{%- endif %}
{%- if cookiecutter.services != '' %}

      - for: { var: SERVICES, as: SERVICE }
        task: "{{ "{{" }}.SERVICE}}:clean"
{%- endif %}
{%- if cookiecutter.with_cookiecutter == 'true' %}

      - echo 'Cleaning test results...'
      - rm -rf {{ "{{" }}.TEST_RESULTS}}
{%- endif %}

  dependencies-update:
    desc: Update dependencies
    cmds:
      - echo 'Updating node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm update" }
{%- if cookiecutter.scripts == 'true' %}

      - echo 'Updating .scripts dependencies...'
      - task: scripts:dependencies-update
{%- endif %}
{%- if cookiecutter.services != '' %}

      - for: { var: SERVICES, as: SERVICE }
        task: "{{ "{{" }}.SERVICE}}:dependencies-update"
{%- endif %}

  dependencies-check:
    desc: Check dependencies
    cmds:
      - echo 'Checking node dependencies...'
      - task: _with_nvm
        vars: { COMMAND: "npm outdated" }
      - task: _with_nvm
        vars: { COMMAND: "npm audit" }
{%- if cookiecutter.scripts == 'true' %}

      - echo 'Checking .scripts dependencies...'
      - task: scripts:dependencies-check
{%- endif %}
{%- if cookiecutter.services != '' %}

      - for: { var: SERVICES, as: SERVICE }
        task: "{{ "{{" }}.SERVICE}}:dependencies-check"
{%- endif %}

  update-from-template:
    desc: Update project from template
    cmds:
      - echo 'Updating project from template...'
      - cookiecutter
        --no-input
        --overwrite-if-exists
        --output-dir ../
        {{ "{{" }}.TEMPLATE_PATH}}
        project_name='{{cookiecutter.project_name}}'
        project_slug='{{cookiecutter.project_slug}}'
        node_version='{{cookiecutter.node_version}}'
        owner_name='{{cookiecutter.owner_name}}'
        owner_github_login='{{cookiecutter.owner_github_login}}'
        scripts='{{cookiecutter.scripts}}'
        services='{{cookiecutter.services}}'
        with_python='{{cookiecutter.with_python}}'
        with_cookiecutter='{{cookiecutter.with_cookiecutter}}'
        with_trivy='{{cookiecutter.with_trivy}}'
        with_zizmor='{{cookiecutter.with_zizmor}}'
        with_docker='{{cookiecutter.with_docker}}'
    vars:
      TEMPLATE_PATH: '{{ "{{" }}.TEMPLATE_PATH | default "https://github.com/ovsds/template-repository"}}'
{%- if cookiecutter.with_docker == 'true' %}

  configure-builder:
    desc: Configure buildx for multi-arch builds
    cmds:
      - echo 'Configuring buildx...'
      - docker buildx create
        --driver docker-container
        --use
{%- endif %}
